"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/services/openai.ts":
/*!************************************!*\
  !*** ./src/lib/services/openai.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debugCode: () => (/* binding */ debugCode),\n/* harmony export */   generateCode: () => (/* binding */ generateCode),\n/* harmony export */   improveCode: () => (/* binding */ improveCode)\n/* harmony export */ });\nconst HTML_TEMPLATE = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <title>Kids Coder Project</title>\\n    <style>\\n        /* CSS styles will go here */\\n    </style>\\n</head>\\n<body>\\n    <!-- HTML content will go here -->\\n    <script>\\n        // JavaScript code will go here\\n    </script>\\n</body>\\n</html>';\nconst SYSTEM_PROMPT = \"You are an expert AI coding tutor for kids. Generate entertaining and fully working one file single page web apps in HTML/CSS/JS code.\\nRules:\\n- ALWAYS use this exact HTML template structure:\\n\".concat(HTML_TEMPLATE, \"\\n- ALWAYS Keep code simple yet interesting and educational\\n- ALWAYS Use Tailwind for CSS styling from a popular fast CDN\\n- ALWAYS use only vanilla JavaScript \\n- ALWAYS Include helpful comments explaining key concepts\\n- ALWAYS focus on good visual and interactive elements\\n- ALWAYS ensure code is safe and appropriate for children\\n- ALWAYS use images from Unsplash for image sources in code\\n- ALWAYS return complete, runnable HTML files with embedded CSS/JS\\n- NEVER include external libraries besides for Tailwind\\n- NEVER include any explanatory text before or after the code\\n- NEVER include opening or closing backtick code / language delimeters at all \\n- ONLY return the HTML code, nothing else\\n- REMEMBER when given existing code, maintain its core concepts and theme while making improvements\");\nasync function generateCode(prompt, existingCode) {\n    try {\n        const response = await fetch('/api/generate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                prompt,\n                existingCode\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Failed to generate code');\n        }\n        const data = await response.json();\n        return data.code;\n    } catch (error) {\n        console.error('API Error:', error);\n        throw new Error('Failed to generate code. Please try again.');\n    }\n}\nasync function improveCode(code) {\n    try {\n        const response = await fetch('/api/generate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                prompt: 'Improve this code while maintaining its core functionality',\n                existingCode: code\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Failed to improve code');\n        }\n        const data = await response.json();\n        return data.code;\n    } catch (error) {\n        console.error('API Error:', error);\n        throw new Error('Failed to improve code. Please try again.');\n    }\n}\nasync function debugCode(code) {\n    try {\n        const response = await fetch('/api/generate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                prompt: 'Debug and optimize this code while maintaining its core functionality',\n                existingCode: code\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Failed to debug code');\n        }\n        const data = await response.json();\n        return data.code;\n    } catch (error) {\n        console.error('API Error:', error);\n        throw new Error('Failed to debug code. Please try again.');\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc2VydmljZXMvb3BlbmFpLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLE1BQU1BLGdCQUFpQjtBQWtCdkIsTUFBTUMsZ0JBQWdCLHFNQUdOLE9BQWRELGVBQWM7QUFlVCxlQUFlRSxhQUFhQyxNQUFjLEVBQUVDLFlBQXFCO0lBQ3RFLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0saUJBQWlCO1lBQzVDQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFBRVI7Z0JBQVFDO1lBQWE7UUFDOUM7UUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFFQSxNQUFNQyxPQUFPLE1BQU1ULFNBQVNVLElBQUk7UUFDaEMsT0FBT0QsS0FBS0UsSUFBSTtJQUNsQixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGNBQWNBO1FBQzVCLE1BQU0sSUFBSUosTUFBTTtJQUNsQjtBQUNGO0FBRU8sZUFBZU0sWUFBWUgsSUFBWTtJQUM1QyxJQUFJO1FBQ0YsTUFBTVgsV0FBVyxNQUFNQyxNQUFNLGlCQUFpQjtZQUM1Q0MsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CUixRQUFRO2dCQUNSQyxjQUFjWTtZQUNoQjtRQUNGO1FBRUEsSUFBSSxDQUFDWCxTQUFTTyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBRUEsTUFBTUMsT0FBTyxNQUFNVCxTQUFTVSxJQUFJO1FBQ2hDLE9BQU9ELEtBQUtFLElBQUk7SUFDbEIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxjQUFjQTtRQUM1QixNQUFNLElBQUlKLE1BQU07SUFDbEI7QUFDRjtBQUVPLGVBQWVPLFVBQVVKLElBQVk7SUFDMUMsSUFBSTtRQUNGLE1BQU1YLFdBQVcsTUFBTUMsTUFBTSxpQkFBaUI7WUFDNUNDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQlIsUUFBUTtnQkFDUkMsY0FBY1k7WUFDaEI7UUFDRjtRQUVBLElBQUksQ0FBQ1gsU0FBU08sRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtRQUNoQyxPQUFPRCxLQUFLRSxJQUFJO0lBQ2xCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsY0FBY0E7UUFDNUIsTUFBTSxJQUFJSixNQUFNO0lBQ2xCO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvc3JjL2xpYi9zZXJ2aWNlcy9vcGVuYWkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9wZW5BSSBmcm9tICdvcGVuYWknO1xuXG5jb25zdCBIVE1MX1RFTVBMQVRFID0gYDwhRE9DVFlQRSBodG1sPlxuPGh0bWwgbGFuZz1cImVuXCI+XG48aGVhZD5cbiAgICA8bWV0YSBjaGFyc2V0PVwiVVRGLThcIj5cbiAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiPlxuICAgIDx0aXRsZT5LaWRzIENvZGVyIFByb2plY3Q8L3RpdGxlPlxuICAgIDxzdHlsZT5cbiAgICAgICAgLyogQ1NTIHN0eWxlcyB3aWxsIGdvIGhlcmUgKi9cbiAgICA8L3N0eWxlPlxuPC9oZWFkPlxuPGJvZHk+XG4gICAgPCEtLSBIVE1MIGNvbnRlbnQgd2lsbCBnbyBoZXJlIC0tPlxuICAgIDxzY3JpcHQ+XG4gICAgICAgIC8vIEphdmFTY3JpcHQgY29kZSB3aWxsIGdvIGhlcmVcbiAgICA8L3NjcmlwdD5cbjwvYm9keT5cbjwvaHRtbD5gO1xuXG5jb25zdCBTWVNURU1fUFJPTVBUID0gYFlvdSBhcmUgYW4gZXhwZXJ0IEFJIGNvZGluZyB0dXRvciBmb3Iga2lkcy4gR2VuZXJhdGUgZW50ZXJ0YWluaW5nIGFuZCBmdWxseSB3b3JraW5nIG9uZSBmaWxlIHNpbmdsZSBwYWdlIHdlYiBhcHBzIGluIEhUTUwvQ1NTL0pTIGNvZGUuXG5SdWxlczpcbi0gQUxXQVlTIHVzZSB0aGlzIGV4YWN0IEhUTUwgdGVtcGxhdGUgc3RydWN0dXJlOlxuJHtIVE1MX1RFTVBMQVRFfVxuLSBBTFdBWVMgS2VlcCBjb2RlIHNpbXBsZSB5ZXQgaW50ZXJlc3RpbmcgYW5kIGVkdWNhdGlvbmFsXG4tIEFMV0FZUyBVc2UgVGFpbHdpbmQgZm9yIENTUyBzdHlsaW5nIGZyb20gYSBwb3B1bGFyIGZhc3QgQ0ROXG4tIEFMV0FZUyB1c2Ugb25seSB2YW5pbGxhIEphdmFTY3JpcHQgXG4tIEFMV0FZUyBJbmNsdWRlIGhlbHBmdWwgY29tbWVudHMgZXhwbGFpbmluZyBrZXkgY29uY2VwdHNcbi0gQUxXQVlTIGZvY3VzIG9uIGdvb2QgdmlzdWFsIGFuZCBpbnRlcmFjdGl2ZSBlbGVtZW50c1xuLSBBTFdBWVMgZW5zdXJlIGNvZGUgaXMgc2FmZSBhbmQgYXBwcm9wcmlhdGUgZm9yIGNoaWxkcmVuXG4tIEFMV0FZUyB1c2UgaW1hZ2VzIGZyb20gVW5zcGxhc2ggZm9yIGltYWdlIHNvdXJjZXMgaW4gY29kZVxuLSBBTFdBWVMgcmV0dXJuIGNvbXBsZXRlLCBydW5uYWJsZSBIVE1MIGZpbGVzIHdpdGggZW1iZWRkZWQgQ1NTL0pTXG4tIE5FVkVSIGluY2x1ZGUgZXh0ZXJuYWwgbGlicmFyaWVzIGJlc2lkZXMgZm9yIFRhaWx3aW5kXG4tIE5FVkVSIGluY2x1ZGUgYW55IGV4cGxhbmF0b3J5IHRleHQgYmVmb3JlIG9yIGFmdGVyIHRoZSBjb2RlXG4tIE5FVkVSIGluY2x1ZGUgb3BlbmluZyBvciBjbG9zaW5nIGJhY2t0aWNrIGNvZGUgLyBsYW5ndWFnZSBkZWxpbWV0ZXJzIGF0IGFsbCBcbi0gT05MWSByZXR1cm4gdGhlIEhUTUwgY29kZSwgbm90aGluZyBlbHNlXG4tIFJFTUVNQkVSIHdoZW4gZ2l2ZW4gZXhpc3RpbmcgY29kZSwgbWFpbnRhaW4gaXRzIGNvcmUgY29uY2VwdHMgYW5kIHRoZW1lIHdoaWxlIG1ha2luZyBpbXByb3ZlbWVudHNgO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVDb2RlKHByb21wdDogc3RyaW5nLCBleGlzdGluZ0NvZGU/OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2VuZXJhdGUnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHByb21wdCwgZXhpc3RpbmdDb2RlIH0pLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZ2VuZXJhdGUgY29kZScpO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgcmV0dXJuIGRhdGEuY29kZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdBUEkgRXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGdlbmVyYXRlIGNvZGUuIFBsZWFzZSB0cnkgYWdhaW4uJyk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcHJvdmVDb2RlKGNvZGU6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9nZW5lcmF0ZScsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcHJvbXB0OiAnSW1wcm92ZSB0aGlzIGNvZGUgd2hpbGUgbWFpbnRhaW5pbmcgaXRzIGNvcmUgZnVuY3Rpb25hbGl0eScsXG4gICAgICAgIGV4aXN0aW5nQ29kZTogY29kZVxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBpbXByb3ZlIGNvZGUnKTtcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIHJldHVybiBkYXRhLmNvZGU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQVBJIEVycm9yOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBpbXByb3ZlIGNvZGUuIFBsZWFzZSB0cnkgYWdhaW4uJyk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlYnVnQ29kZShjb2RlOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2VuZXJhdGUnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHByb21wdDogJ0RlYnVnIGFuZCBvcHRpbWl6ZSB0aGlzIGNvZGUgd2hpbGUgbWFpbnRhaW5pbmcgaXRzIGNvcmUgZnVuY3Rpb25hbGl0eScsXG4gICAgICAgIGV4aXN0aW5nQ29kZTogY29kZVxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBkZWJ1ZyBjb2RlJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICByZXR1cm4gZGF0YS5jb2RlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FQSSBFcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZGVidWcgY29kZS4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJIVE1MX1RFTVBMQVRFIiwiU1lTVEVNX1BST01QVCIsImdlbmVyYXRlQ29kZSIsInByb21wdCIsImV4aXN0aW5nQ29kZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJjb2RlIiwiZXJyb3IiLCJjb25zb2xlIiwiaW1wcm92ZUNvZGUiLCJkZWJ1Z0NvZGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/services/openai.ts\n"));

/***/ })

});